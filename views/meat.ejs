<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <title>Prep Ingredients</title>
</head>
<body>
    <div class="row row-cols-1 row-cols-md-6 g-4">
        <% if (locals.meats) {var meat_lst = Object.keys(meats); for (var i = 0; i < meat_lst.length; i++) { var meat_item = meat_lst[i];%>
            <div class="col">
                <div id="<%=meat_item%>" class="card h-100">
                    <div id="cover">        
                        <img src="/images/<%= meat_item%>.jpg" class="card-img-top" alt="<%= meat_item%>" loading="lazy">
                    </div>
                    <div class="card-body">
                    <h5 class="card-title" style="font-style: italic;"><%= meat_item %></h5>
                    </div>
                </div>
            </div>
            <script>
                var urgency = "<%=meats[meat_item]%>";
                if (urgency === "true"){
                    document.getElementById("<%=meat_item%>").style.backgroundColor = "#ffc107";
                }
            </script>
            <% } }%>
    </div>

    <script> 
        const socket = new WebSocket('ws://localhost:3000');
        window.addEventListener('beforeunload', () => {
            socket.close(); // Explicitly close the WebSocket connection
        });

        let isPageLoaded = false;

        document.addEventListener('DOMContentLoaded', () => {
            isPageLoaded = true;
        });

        socket.onmessage = (event) => {
            //console.log('Received WebSocket message:', event.data);
        
            const data = JSON.parse(event.data);

            if (isPageLoaded && data.page === 'meat' && window.location.pathname === '/meat') {
                location.reload(); // Refresh page
            }
        };
    // Handle WebSocket errors
        socket.onerror = (error) => {
            console.error('WebSocket error:', error);
        };
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

</body>
</html>